import { TextField } from '@mui/material'
import { DesktopDatePicker } from '@mui/x-date-pickers'
import type { NextPage } from 'next'
import Head from 'next/head'
import styles from '../styles/Home.module.css'
import { useRouter } from 'next/router'
import { useEffect } from 'react'
import { addErrorEventListener } from '../api/utils'
import { EntryForm } from '../components/EntryForm'
import { DailyEntries } from '../components/DailyEntries'
import { Header } from '../components/Header'

const Home: NextPage = () => {
  const { push, query } = useRouter()
  const queryDateString =
    typeof query.date === 'string' ? query.date : undefined

  useEffect(() => {
    const unsubscribe = addErrorEventListener((error) => {
      if (error.status === 401) {
        push('/login')
      }
    })

    return () => unsubscribe()
  }, [push])

  useEffect(() => {
    if (!queryDateString) {
      push({
        query: {
          date: new Date().toDateString(),
        },
      })
    }
  }, [push, queryDateString])

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <Header />
        {!!queryDateString && (
          <DesktopDatePicker
            label="Date"
            inputFormat="MM/dd/yyyy"
            value={new Date(queryDateString)}
            onChange={(selectedDate) => {
              if (selectedDate) {
                push({
                  query: {
                    date: selectedDate.toDateString(),
                  },
                })
              }
            }}
            renderInput={(params) => <TextField {...params} />}
          />
        )}
        <DailyEntries />
        <EntryForm />
      </main>
    </div>
  )
}

export default Home
